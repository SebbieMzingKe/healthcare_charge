# -*- coding: utf-8 -*-
"""Healthcare .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ekgfwKVhwXl4XtC46nbENYdWd2StgZDx
"""

import pandas as pd
import numpy as np

df = pd.read_csv("insurance.csv")
df.head()

# clean the data
#missing values
# standardize

df.info()

# df_fill = df.dropna()

# df_fill['region'].unique()

# df_fill['region'] = df["region"].str.lower()
# df_fill["region"].unique()

df_fill = df.dropna()

df_fill['region'] = df_fill['region'].str.lower()

FEMALE = 'female'
MALE = 'male'
sex_map = {'F': FEMALE, 'woman': FEMALE, 'man': MALE, 'M': MALE}

df_fill['sex'] = df_fill['sex'].replace(sex_map)

df_fill['smoker'] = (df_fill['smoker'] == 'yes')

df_fill['charges'] = df_fill['charges'].str.strip('$').astype('float64')

df_pos = df_fill.apply(lambda x: x.abs() if np.issubdtype(x.dtype, np.number) else x)

df_pos.sample(10)

# df_fill["smoker"].unique()

# df_fill["smoker"] = (df_fill["smoker"] == "yes")
# df_fill.head()

# df_fill["charges"] = df_fill["charges"].str.strip("$").astype("float64")
# df_pos = df_fill.apply(lambda x: x.abs() if np.issubdtype(x.dtype, np.number) else x)

import matplotlib.pyplot as plt

# scatter plots of r/ships betweeen dependent and independent var.
df = df_pos.copy()
plt.scatter(df["bmi"], df["charges"])

# task 3 prepare data for model fitting


df_new = pd.get_dummies(df, prefix=['region'], columns=['region'], dtype = int)
df_new = df_new.drop(columns=['region_southeast'])

df_new['smoker'] = df_new['smoker'].astype('int64')


df_new['is_male'] = (df_new['sex'] == 'male').astype('int64')
df_new = df_new.drop(columns=['sex'])

df_new = df_new.dropna()
df_new.head()

# df_new["sex"] = (df_new["sex"] == "male").astype("int64")
# df_new = df_new.drop(columns=["sex"])
# df_new.head()

# df_new["region_southwest"] = (df_new["region_southwest"] == "True").astype("int64")
# df_new.head()

# df_new["region_southwest"].unique()

# fit linear regression model

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.kernel_ridge import KernelRidge
from sklearn.metrics import mean_squared_error, r2_score

# i/o var
X = df_new.drop(columns = ["charges"])
y = df_new["charges"]



# splitting the data

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)

# create and train the model
model = LinearRegression()
# model = KernelRidge()
model.fit(X_train, y_train)

# make predictions on test data
y_pred = model.predict(X_test)

# calculate mean squared error
r2_score = r2_score(y_test, y_pred)

# output r2_score
r2_score

# helper function to pre process dataframe
def preprocess_df(df):
  df_new = pd.get_dummies(df, prefix=['region'], columns=['region'], dtype = int)
  df_new = df_new.drop(columns=['region_southeast'])

  df_new["smoker"] = (df_new["smoker"] == "yes")
  df_new['smoker'] = df_new['smoker'].astype('int64')


  df_new['is_male'] = (df_new['sex'] == 'male').astype('int64')
  df_new = df_new.drop(columns=['sex'])

  df_new = df_new.dropna()
  df_new.head()

  return df_new

df_new["is_male"].unique()

# how model performs on validate data
val_df = pd.read_csv("/content/validation_insuraance_dataset.csv")

val_data = preprocess_df(val_df)

preds = model.predict(val_data)
preds_new = [x if x > 0 else 1000 for x in preds]

validation_data = val_df.copy()

validation_data["predicted_charges"] = preds_new

validation_data

